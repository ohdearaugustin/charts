{{ if eq .Values.headscale.config.db_type "sqlite3" }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "headscale.fullname" . }}
  labels:
    {{- include "headscale.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "headscale.fullname" . }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "headscale.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "headscale.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "headscale.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.headscale.debug }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}-debug"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          command: ["headscale"]
          args: ["serve"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          # Workaround as the private key from a secret can't be mounted to private_key_path
          # which is on a volume
          {{- if .Values.headscale.private_key }}
          env:
            - name: HEADSCALE_PRIVATE_KEY_PATH
              value: /private.key
          {{- end }}
          ports:
            {{- if not .Values.headscale.config.tls_letsencrypt_hostname }}
            - name: http
              containerPort: {{ include "split-host-port" .Values.headscale.config.listen_addr }}
              protocol: TCP
            {{- end }}
            {{- if .Values.headscale.config.tls_letsencrypt_hostname }}
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: {{ include "split-host-port" .Values.headscale.config.listen_addr }}
              protocol: TCP
            {{- end }}
            - name: metrics
              containerPort: {{ include "split-host-port" .Values.headscale.config.metrics_listen_addr }}
              protocol: TCP
            - name: grpc
              containerPort: {{ include "split-host-port" .Values.headscale.config.grpc_listen_addr }}
              protocol: TCP
            {{- if .Values.headscale.config.derp.server.enabled }}
            - name: derp
              containerPort: {{ include "split-host-port" .Values.headscale.config.derp.server.stun_listen_addr }}
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /health
              port: http
          volumeMounts:
            - name: {{ include "headscale.fullname" . }}-data
              mountPath: /var/lib/headscale/
      {{- if .Values.headscale.private_key }}
            - name: private-key
              mountPath: /private.key
              subPath: private.key
      {{- end }}
            - name: config-volume
              mountPath: /etc/headscale/config.yaml
              subPath: config.yaml
      volumes:
      {{- if .Values.headscale.private_key }}
      {{- if .Values.headscale.private_key.key  }}
      - name: private-key
        secret:
          secretName: {{ include "headscale.fullname" . }}-key
      {{- end }}
      {{- if .Values.headscale.private_key.existing_secret }}
      - name: private-key
        secret:
          secretName: {{ .Values.headscale.private_key.existing_secret }}
      {{- end }}
      {{- end }}
      - name: config-volume
        configMap:
          name: {{ include "headscale.fullname" .}}-config
  volumeClaimTemplates:
  - metadata:
      name: {{ include "headscale.fullname" . }}-data
    spec:
      storageClassName: {{ .Values.storage.class }}
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.storage.size }}
{{ end }}
